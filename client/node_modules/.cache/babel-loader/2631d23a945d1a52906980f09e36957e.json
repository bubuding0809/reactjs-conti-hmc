{"ast":null,"code":"var _jsxFileName = \"/Users/dingruoqian/Desktop/code/reactjs-conti-hmc/src/components/VideoControls.js\";\nimport { Grid, Button, Switch, FormControl, FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\nimport React from \"react\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VideoControls(props) {\n  const videoQualityOptions = [\"1080\", \"720\", \"360\", \"240\"];\n  const qualityOptions = videoQualityOptions.map(quality => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: `video-quality-${quality}`,\n        type: \"radio\",\n        value: quality,\n        onChange: props.handleVideoQualityChange,\n        checked: props.streamerConfig.quality === quality\n      }, quality, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `video-quality-${quality}`,\n        children: `${quality}p`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: \"video-play-button\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: props.toggleVideoPlay,\n        children: props.streamerConfig.paused ? /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(PauseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: true,\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          size: \"small\",\n          onChange: props.toggleVideoLoop,\n          checked: props.streamerConfig.loop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 42\n              }, this),\n              value: \"1080p\",\n              label: \"1080p\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 42\n              }, this),\n              value: \"720p\",\n              label: \"720p\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_c = VideoControls;\nexport default VideoControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoControls\");","map":{"version":3,"names":["Grid","Button","Switch","FormControl","FormControlLabel","Radio","RadioGroup","React","PlayArrowIcon","PauseIcon","VideoControls","props","videoQualityOptions","qualityOptions","map","quality","handleVideoQualityChange","streamerConfig","toggleVideoPlay","paused","toggleVideoLoop","loop"],"sources":["/Users/dingruoqian/Desktop/code/reactjs-conti-hmc/src/components/VideoControls.js"],"sourcesContent":["import {\n    Grid,\n    Button,\n    Switch,\n    FormControl,\n    FormControlLabel,\n    Radio,\n    RadioGroup,\n} from \"@mui/material\";\nimport React from \"react\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\n\nfunction VideoControls(props) {\n    const videoQualityOptions = [\"1080\", \"720\", \"360\", \"240\"];\n\n    const qualityOptions = videoQualityOptions.map(quality => {\n        return (\n            <div className=\"video-options\">\n                <input\n                    key={quality}\n                    id={`video-quality-${quality}`}\n                    type=\"radio\"\n                    value={quality}\n                    onChange={props.handleVideoQualityChange}\n                    checked={props.streamerConfig.quality === quality}\n                />\n                <label htmlFor={`video-quality-${quality}`}>\n                    {`${quality}p`}\n                </label>\n            </div>\n        );\n    });\n\n    return (\n        <Grid container justifyContent={\"space-between\"} alignItems={\"center\"}>\n            <Grid item xs=\"auto\">\n                <Button\n                    id=\"video-play-button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={props.toggleVideoPlay}\n                >\n                    {props.streamerConfig.paused ? (\n                        <PlayArrowIcon />\n                    ) : (\n                        <PauseIcon />\n                    )}\n                </Button>\n            </Grid>\n            <Grid\n                item\n                container\n                xs\n                justifyContent={\"space-between\"}\n                alignItems={\"center\"}\n            >\n                <Grid item>\n                    <Switch\n                        size=\"small\"\n                        onChange={props.toggleVideoLoop}\n                        checked={props.streamerConfig.loop}\n                    />\n                </Grid>\n                <Grid item>\n                    <FormControl>\n                        <RadioGroup>\n                            <FormControlLabel\n                                control={<Radio />}\n                                value=\"1080p\"\n                                label=\"1080p\"\n                            />\n                            <FormControlLabel\n                                control={<Radio />}\n                                value=\"720p\"\n                                label=\"720p\"\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default VideoControls;\n"],"mappings":";AAAA,SACIA,IADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,WAJJ,EAKIC,gBALJ,EAMIC,KANJ,EAOIC,UAPJ,QAQO,eARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC1B,MAAMC,mBAAmB,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,CAA5B;EAEA,MAAMC,cAAc,GAAGD,mBAAmB,CAACE,GAApB,CAAwBC,OAAO,IAAI;IACtD,oBACI;MAAK,SAAS,EAAC,eAAf;MAAA,wBACI;QAEI,EAAE,EAAG,iBAAgBA,OAAQ,EAFjC;QAGI,IAAI,EAAC,OAHT;QAII,KAAK,EAAEA,OAJX;QAKI,QAAQ,EAAEJ,KAAK,CAACK,wBALpB;QAMI,OAAO,EAAEL,KAAK,CAACM,cAAN,CAAqBF,OAArB,KAAiCA;MAN9C,GACSA,OADT;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAO,OAAO,EAAG,iBAAgBA,OAAQ,EAAzC;QAAA,UACM,GAAEA,OAAQ;MADhB;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAeH,CAhBsB,CAAvB;EAkBA,oBACI,QAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,cAAc,EAAE,eAAhC;IAAiD,UAAU,EAAE,QAA7D;IAAA,wBACI,QAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAC,MAAd;MAAA,uBACI,QAAC,MAAD;QACI,EAAE,EAAC,mBADP;QAEI,OAAO,EAAC,WAFZ;QAGI,KAAK,EAAC,SAHV;QAII,OAAO,EAAEJ,KAAK,CAACO,eAJnB;QAAA,UAMKP,KAAK,CAACM,cAAN,CAAqBE,MAArB,gBACG,QAAC,aAAD;UAAA;UAAA;UAAA;QAAA,QADH,gBAGG,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA;MATR;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAeI,QAAC,IAAD;MACI,IAAI,MADR;MAEI,SAAS,MAFb;MAGI,EAAE,MAHN;MAII,cAAc,EAAE,eAJpB;MAKI,UAAU,EAAE,QALhB;MAAA,wBAOI,QAAC,IAAD;QAAM,IAAI,MAAV;QAAA,uBACI,QAAC,MAAD;UACI,IAAI,EAAC,OADT;UAEI,QAAQ,EAAER,KAAK,CAACS,eAFpB;UAGI,OAAO,EAAET,KAAK,CAACM,cAAN,CAAqBI;QAHlC;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAPJ,eAcI,QAAC,IAAD;QAAM,IAAI,MAAV;QAAA,uBACI,QAAC,WAAD;UAAA,uBACI,QAAC,UAAD;YAAA,wBACI,QAAC,gBAAD;cACI,OAAO,eAAE,QAAC,KAAD;gBAAA;gBAAA;gBAAA;cAAA,QADb;cAEI,KAAK,EAAC,OAFV;cAGI,KAAK,EAAC;YAHV;cAAA;cAAA;cAAA;YAAA,QADJ,eAMI,QAAC,gBAAD;cACI,OAAO,eAAE,QAAC,KAAD;gBAAA;gBAAA;gBAAA;cAAA,QADb;cAEI,KAAK,EAAC,MAFV;cAGI,KAAK,EAAC;YAHV;cAAA;cAAA;cAAA;YAAA,QANJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAdJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAfJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiDH;;KAtEQX,a;AAwET,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}