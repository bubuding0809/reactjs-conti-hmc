{"ast":null,"code":"var _jsxFileName = \"/Users/dingruoqian/Desktop/code/reactjs-conti-hmc/src/components/VideoStreamer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Vimeo from \"@u-wave/react-vimeo\";\nimport VideoForm from \"./VideoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VideoStreamer() {\n  _s();\n\n  const [isloadDisabled, setIsloadDisabled] = useState(true // disable load button by default\n  );\n  const [videoFormConfig, setVideoFormConfig] = useState({\n    videoUrl: \"\" // Set default video URL to empty string\n\n  });\n  const [streamerConfig, setStreamerConfig] = useState({\n    id: \"\",\n    // Set default video ID to empty string\n    videoId: \"712561471\",\n    // Set default video to 712561471\n    quality: \"1080\",\n    // Set default quality to 1080p\n    paused: true // Set default state to paused\n\n  });\n\n  function setVideoPlay() {\n    setStreamerConfig(prevState => {\n      return { ...prevState,\n        paused: false\n      };\n    });\n  }\n\n  function setVideoPause() {\n    setStreamerConfig(prevState => {\n      return { ...prevState,\n        paused: true\n      };\n    });\n  }\n\n  function handleFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target; // Update the form state.\n\n    setVideoFormConfig(prevState => ({ ...prevState,\n      [name]: value\n    })); // if the video id is not empty, enable the load button\n\n    if (name === \"videoUrl\" && !value) {\n      setIsloadDisabled(true);\n    } else if (name === \"videoUrl\" && value) {\n      setIsloadDisabled(false);\n    }\n  }\n\n  function handleFormSubmit(event) {\n    event.preventDefault(); // Update the streamer config.\n\n    setStreamerConfig(prevState => ({ ...prevState,\n      // Generate a random ID to be used as for the key prop to remount vimeo player\n      id: Math.random().toString(),\n      videoId: videoFormConfig.videoUrl,\n      quality: streamerConfig.quality,\n      paused: true\n    }));\n  }\n\n  function handleVideoQualityChange(event) {\n    const {\n      value\n    } = event.target; // Update the streamer config.\n\n    setStreamerConfig(prevState => ({ ...prevState,\n      id: Math.random().toString(),\n      quality: value,\n      paused: true\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(VideoForm, {\n      videoFormConfig: videoFormConfig,\n      isloadDisabled: isloadDisabled,\n      handleFormChange: handleFormChange,\n      handleFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Vimeo\n    /* Remount the Vimeo player when the ID changes, \n     so to ensure new video quality gets applied */\n    , {\n      video: streamerConfig.videoId,\n      quality: streamerConfig.quality,\n      paused: streamerConfig.paused,\n      responsive: true\n    }, streamerConfig.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setVideoPlay,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setVideoPause,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"quality-1080\",\n      type: \"radio\",\n      value: \"1080\",\n      name: \"quality\",\n      onChange: handleVideoQualityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"quality-1080\",\n      children: \"1080p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"quality-720\",\n      type: \"radio\",\n      value: \"720\",\n      name: \"quality\",\n      onChange: handleVideoQualityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"quality-720\",\n      children: \"720p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"quality-360\",\n      type: \"radio\",\n      value: \"360\",\n      name: \"quality\",\n      onChange: handleVideoQualityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"quality-360\",\n      children: \"360p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"quality-240\",\n      type: \"radio\",\n      value: \"240\",\n      name: \"quality\",\n      onChange: handleVideoQualityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"quality-240\",\n      children: \"240p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VideoStreamer, \"wVX8iQiV2yuvcUFmXXfduxjGJcc=\");\n\n_c = VideoStreamer;\nexport default VideoStreamer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoStreamer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Vimeo","VideoForm","VideoStreamer","isloadDisabled","setIsloadDisabled","videoFormConfig","setVideoFormConfig","videoUrl","streamerConfig","setStreamerConfig","id","videoId","quality","paused","setVideoPlay","prevState","setVideoPause","handleFormChange","event","name","value","target","handleFormSubmit","preventDefault","Math","random","toString","handleVideoQualityChange"],"sources":["/Users/dingruoqian/Desktop/code/reactjs-conti-hmc/src/components/VideoStreamer.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Vimeo from \"@u-wave/react-vimeo\";\nimport VideoForm from \"./VideoForm\";\n\nfunction VideoStreamer() {\n    const [isloadDisabled, setIsloadDisabled] = useState(\n        true // disable load button by default\n    );\n\n    const [videoFormConfig, setVideoFormConfig] = useState({\n        videoUrl: \"\", // Set default video URL to empty string\n    });\n\n    const [streamerConfig, setStreamerConfig] = useState({\n        id: \"\", // Set default video ID to empty string\n        videoId: \"712561471\", // Set default video to 712561471\n        quality: \"1080\", // Set default quality to 1080p\n        paused: true, // Set default state to paused\n    });\n\n    function setVideoPlay() {\n        setStreamerConfig(prevState => {\n            return {\n                ...prevState,\n                paused: false,\n            };\n        });\n    }\n\n    function setVideoPause() {\n        setStreamerConfig(prevState => {\n            return {\n                ...prevState,\n                paused: true,\n            };\n        });\n    }\n\n    function handleFormChange(event) {\n        const { name, value } = event.target;\n\n        // Update the form state.\n        setVideoFormConfig(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n\n        // if the video id is not empty, enable the load button\n        if (name === \"videoUrl\" && !value) {\n            setIsloadDisabled(true);\n        } else if (name === \"videoUrl\" && value) {\n            setIsloadDisabled(false);\n        }\n    }\n\n    function handleFormSubmit(event) {\n        event.preventDefault();\n\n        // Update the streamer config.\n        setStreamerConfig(prevState => ({\n            ...prevState,\n            // Generate a random ID to be used as for the key prop to remount vimeo player\n            id: Math.random().toString(),\n            videoId: videoFormConfig.videoUrl,\n            quality: streamerConfig.quality,\n            paused: true,\n        }));\n    }\n\n    function handleVideoQualityChange(event) {\n        const { value } = event.target;\n\n        // Update the streamer config.\n        setStreamerConfig(prevState => ({\n            ...prevState,\n            id: Math.random().toString(),\n            quality: value,\n            paused: true,\n        }));\n    }\n\n    return (\n        <div>\n            <VideoForm\n                videoFormConfig={videoFormConfig}\n                isloadDisabled={isloadDisabled}\n                handleFormChange={handleFormChange}\n                handleFormSubmit={handleFormSubmit}\n            />\n            <Vimeo\n                /* Remount the Vimeo player when the ID changes, \n                 so to ensure new video quality gets applied */\n                key={streamerConfig.id}\n                video={streamerConfig.videoId}\n                quality={streamerConfig.quality}\n                paused={streamerConfig.paused}\n                responsive\n            />\n            <button onClick={setVideoPlay}>Play</button>\n            <button onClick={setVideoPause}>Pause</button>\n            <input\n                id=\"quality-1080\"\n                type=\"radio\"\n                value=\"1080\"\n                name=\"quality\"\n                onChange={handleVideoQualityChange}\n            />\n            <label htmlFor=\"quality-1080\">1080p</label>\n\n            <input\n                id=\"quality-720\"\n                type=\"radio\"\n                value=\"720\"\n                name=\"quality\"\n                onChange={handleVideoQualityChange}\n            />\n            <label htmlFor=\"quality-720\">720p</label>\n\n            <input\n                id=\"quality-360\"\n                type=\"radio\"\n                value=\"360\"\n                name=\"quality\"\n                onChange={handleVideoQualityChange}\n            />\n            <label htmlFor=\"quality-360\">360p</label>\n\n            <input\n                id=\"quality-240\"\n                type=\"radio\"\n                value=\"240\"\n                name=\"quality\"\n                onChange={handleVideoQualityChange}\n            />\n            <label htmlFor=\"quality-240\">240p</label>\n        </div>\n    );\n}\n\nexport default VideoStreamer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,aAAT,GAAyB;EAAA;;EACrB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAChD,IADgD,CAC3C;EAD2C,CAApD;EAIA,MAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC;IACnDS,QAAQ,EAAE,EADyC,CACrC;;EADqC,CAAD,CAAtD;EAIA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC;IACjDY,EAAE,EAAE,EAD6C;IACzC;IACRC,OAAO,EAAE,WAFwC;IAE3B;IACtBC,OAAO,EAAE,MAHwC;IAGhC;IACjBC,MAAM,EAAE,IAJyC,CAInC;;EAJmC,CAAD,CAApD;;EAOA,SAASC,YAAT,GAAwB;IACpBL,iBAAiB,CAACM,SAAS,IAAI;MAC3B,OAAO,EACH,GAAGA,SADA;QAEHF,MAAM,EAAE;MAFL,CAAP;IAIH,CALgB,CAAjB;EAMH;;EAED,SAASG,aAAT,GAAyB;IACrBP,iBAAiB,CAACM,SAAS,IAAI;MAC3B,OAAO,EACH,GAAGA,SADA;QAEHF,MAAM,EAAE;MAFL,CAAP;IAIH,CALgB,CAAjB;EAMH;;EAED,SAASI,gBAAT,CAA0BC,KAA1B,EAAiC;IAC7B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,KAAK,CAACG,MAA9B,CAD6B,CAG7B;;IACAf,kBAAkB,CAACS,SAAS,KAAK,EAC7B,GAAGA,SAD0B;MAE7B,CAACI,IAAD,GAAQC;IAFqB,CAAL,CAAV,CAAlB,CAJ6B,CAS7B;;IACA,IAAID,IAAI,KAAK,UAAT,IAAuB,CAACC,KAA5B,EAAmC;MAC/BhB,iBAAiB,CAAC,IAAD,CAAjB;IACH,CAFD,MAEO,IAAIe,IAAI,KAAK,UAAT,IAAuBC,KAA3B,EAAkC;MACrChB,iBAAiB,CAAC,KAAD,CAAjB;IACH;EACJ;;EAED,SAASkB,gBAAT,CAA0BJ,KAA1B,EAAiC;IAC7BA,KAAK,CAACK,cAAN,GAD6B,CAG7B;;IACAd,iBAAiB,CAACM,SAAS,KAAK,EAC5B,GAAGA,SADyB;MAE5B;MACAL,EAAE,EAAEc,IAAI,CAACC,MAAL,GAAcC,QAAd,EAHwB;MAI5Bf,OAAO,EAAEN,eAAe,CAACE,QAJG;MAK5BK,OAAO,EAAEJ,cAAc,CAACI,OALI;MAM5BC,MAAM,EAAE;IANoB,CAAL,CAAV,CAAjB;EAQH;;EAED,SAASc,wBAAT,CAAkCT,KAAlC,EAAyC;IACrC,MAAM;MAAEE;IAAF,IAAYF,KAAK,CAACG,MAAxB,CADqC,CAGrC;;IACAZ,iBAAiB,CAACM,SAAS,KAAK,EAC5B,GAAGA,SADyB;MAE5BL,EAAE,EAAEc,IAAI,CAACC,MAAL,GAAcC,QAAd,EAFwB;MAG5Bd,OAAO,EAAEQ,KAHmB;MAI5BP,MAAM,EAAE;IAJoB,CAAL,CAAV,CAAjB;EAMH;;EAED,oBACI;IAAA,wBACI,QAAC,SAAD;MACI,eAAe,EAAER,eADrB;MAEI,cAAc,EAAEF,cAFpB;MAGI,gBAAgB,EAAEc,gBAHtB;MAII,gBAAgB,EAAEK;IAJtB;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI,QAAC;IACG;AAChB;IAFY;MAII,KAAK,EAAEd,cAAc,CAACG,OAJ1B;MAKI,OAAO,EAAEH,cAAc,CAACI,OAL5B;MAMI,MAAM,EAAEJ,cAAc,CAACK,MAN3B;MAOI,UAAU;IAPd,GAGSL,cAAc,CAACE,EAHxB;MAAA;MAAA;MAAA;IAAA,QAPJ,eAgBI;MAAQ,OAAO,EAAEI,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBJ,eAiBI;MAAQ,OAAO,EAAEE,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBJ,eAkBI;MACI,EAAE,EAAC,cADP;MAEI,IAAI,EAAC,OAFT;MAGI,KAAK,EAAC,MAHV;MAII,IAAI,EAAC,SAJT;MAKI,QAAQ,EAAEW;IALd;MAAA;MAAA;MAAA;IAAA,QAlBJ,eAyBI;MAAO,OAAO,EAAC,cAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBJ,eA2BI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,OAFT;MAGI,KAAK,EAAC,KAHV;MAII,IAAI,EAAC,SAJT;MAKI,QAAQ,EAAEA;IALd;MAAA;MAAA;MAAA;IAAA,QA3BJ,eAkCI;MAAO,OAAO,EAAC,aAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAlCJ,eAoCI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,OAFT;MAGI,KAAK,EAAC,KAHV;MAII,IAAI,EAAC,SAJT;MAKI,QAAQ,EAAEA;IALd;MAAA;MAAA;MAAA;IAAA,QApCJ,eA2CI;MAAO,OAAO,EAAC,aAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA3CJ,eA6CI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,OAFT;MAGI,KAAK,EAAC,KAHV;MAII,IAAI,EAAC,SAJT;MAKI,QAAQ,EAAEA;IALd;MAAA;MAAA;MAAA;IAAA,QA7CJ,eAoDI;MAAO,OAAO,EAAC,aAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApDJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAwDH;;GArIQzB,a;;KAAAA,a;AAuIT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}