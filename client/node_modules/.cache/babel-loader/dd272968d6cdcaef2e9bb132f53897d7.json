{"ast":null,"code":"var _jsxFileName = \"/Users/dingruoqian/Desktop/code/reactjs-conti-hmc/src/components/FileUploader.js\",\n    _s = $RefreshSig$();\n\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { Fab, Grid, TextField, Button, Typography, LinearProgress } from \"@mui/material\";\nimport { useState } from \"react\";\nimport FileInput from \"./FileInput\";\nimport axios from \"axios\";\nimport fs from \"fs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileDownloder() {\n  _s();\n\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [destApi, setDestApi] = useState(\"https://run.mocky.io/v3/445f0c6c-2e05-4710-b818-2ddeda7a08a5\");\n  const [percentage, setPercentage] = useState(0);\n  const options = {\n    onUploadProgress: progressEvent => {\n      const {\n        loaded,\n        total\n      } = progressEvent;\n      const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n      console.log(`${loaded}/${total}, ${percentCompleted}%`);\n      setPercentage(percentCompleted);\n    }\n  };\n\n  function handleFileChange(event) {\n    const files = [...event.target.files];\n    setSelectedFiles(prevstate => [...prevstate, ...files]);\n  }\n\n  function handleFileClear() {\n    setSelectedFiles([]);\n  }\n\n  async function handleFilesUpload() {\n    const data = new FormData();\n    data.append(\"files\", selectedFiles[0]);\n\n    try {\n      const response = await axios.post(destApi, data, options);\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n\n    setTimeout(() => {\n      setPercentage(0);\n    }, 500);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    rowSpacing: 1,\n    justifyContent: \"space-around\",\n    alignItems: \"flex-end\",\n    borderRadius: 2,\n    p: 1,\n    backgroundColor: \"#f5f5f5\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      paddingRight: 0.5,\n      children: /*#__PURE__*/_jsxDEV(FileInput, {\n        id: \"test-file-upload\",\n        multiple: true,\n        onChange: handleFileChange,\n        onClear: handleFileClear,\n        variant: \"text\",\n        files: selectedFiles,\n        text: \"Choose files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      mr: 2,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Destination API\",\n        variant: \"outlined\",\n        sx: {\n          mt: 1\n        },\n        fullWidth: true,\n        value: destApi,\n        onChange: event => setDestApi(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        onClick: handleFilesUpload,\n        children: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      alignItems: \"center\",\n      columnSpacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: percentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: percentage + \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileDownloder, \"uxj0j8LjgbCJOQ3eSIcWEZyjAGQ=\");\n\n_c = FileDownloder;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDownloder\");","map":{"version":3,"names":["CloudUploadIcon","Fab","Grid","TextField","Button","Typography","LinearProgress","useState","FileInput","axios","fs","FileDownloder","selectedFiles","setSelectedFiles","destApi","setDestApi","percentage","setPercentage","options","onUploadProgress","progressEvent","loaded","total","percentCompleted","Math","round","console","log","handleFileChange","event","files","target","prevstate","handleFileClear","handleFilesUpload","data","FormData","append","response","post","err","setTimeout","mt","value"],"sources":["/Users/dingruoqian/Desktop/code/reactjs-conti-hmc/src/components/FileUploader.js"],"sourcesContent":["import CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport {\n    Fab,\n    Grid,\n    TextField,\n    Button,\n    Typography,\n    LinearProgress,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport FileInput from \"./FileInput\";\nimport axios from \"axios\";\nimport fs from \"fs\";\n\nexport default function FileDownloder() {\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [destApi, setDestApi] = useState(\n        \"https://run.mocky.io/v3/445f0c6c-2e05-4710-b818-2ddeda7a08a5\"\n    );\n    const [percentage, setPercentage] = useState(0);\n\n    const options = {\n        onUploadProgress: progressEvent => {\n            const { loaded, total } = progressEvent;\n\n            const percentCompleted = Math.round(\n                (progressEvent.loaded * 100) / progressEvent.total\n            );\n            console.log(`${loaded}/${total}, ${percentCompleted}%`);\n            setPercentage(percentCompleted);\n        },\n    };\n\n    function handleFileChange(event) {\n        const files = [...event.target.files];\n        setSelectedFiles(prevstate => [...prevstate, ...files]);\n    }\n\n    function handleFileClear() {\n        setSelectedFiles([]);\n    }\n\n    async function handleFilesUpload() {\n        const data = new FormData();\n        data.append(\"files\", selectedFiles[0]);\n        try {\n            const response = await axios.post(destApi, data, options);\n            console.log(response);\n        } catch (err) {\n            console.log(err);\n        }\n        setTimeout(() => {\n            setPercentage(0);\n        }, 500);\n    }\n\n    return (\n        <Grid\n            container\n            rowSpacing={1}\n            justifyContent=\"space-around\"\n            alignItems=\"flex-end\"\n            borderRadius={2}\n            p={1}\n            backgroundColor={\"#f5f5f5\"}\n        >\n            <Grid item xs={12} paddingRight={0.5}>\n                <FileInput\n                    id=\"test-file-upload\"\n                    multiple={true}\n                    onChange={handleFileChange}\n                    onClear={handleFileClear}\n                    variant=\"text\"\n                    files={selectedFiles}\n                    text=\"Choose files\"\n                />\n            </Grid>\n            <Grid item xs mr={2}>\n                <TextField\n                    label=\"Destination API\"\n                    variant=\"outlined\"\n                    sx={{ mt: 1 }}\n                    fullWidth\n                    value={destApi}\n                    onChange={event => setDestApi(event.target.value)}\n                />\n            </Grid>\n            <Grid item xs=\"auto\">\n                <Fab color=\"primary\" onClick={handleFilesUpload}>\n                    <CloudUploadIcon />\n                </Fab>\n            </Grid>\n            <Grid\n                item\n                container\n                xs={12}\n                alignItems={\"center\"}\n                columnSpacing={1}\n            >\n                <Grid item xs>\n                    <LinearProgress variant=\"determinate\" value={percentage} />\n                </Grid>\n                <Grid item xs=\"auto\">\n                    <Typography>{percentage + \"%\"}</Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}