{"ast":null,"code":"var _jsxFileName = \"/Users/dingruoqian/Desktop/code/reactjs-conti-hmc/src/components/VideoStreamer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Vimeo from \"@u-wave/react-vimeo\";\nimport VideoForm from \"./VideoForm\";\nimport VideoControls from \"./VideoControls\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VideoStreamer() {\n  _s();\n\n  const [videoFormConfig, setVideoFormConfig] = useState({\n    videoUrl: \"https://vimeo.com/712561471\" // Set default video URL to empty string\n\n  });\n  const [streamerConfig, setStreamerConfig] = useState({\n    id: nanoid(),\n    // Set default video ID to empty string\n    video: \"https://vimeo.com/712561471\",\n    // Set default video to 712561471\n    quality: \"1080\",\n    // Set default quality to 1080p\n    start: 0,\n    // Set default start time to 0\n    loop: true,\n    // Set default loop to true\n    paused: true,\n    // Set default state to paused\n    muted: true // Set default state to muted\n\n  });\n\n  function toggleVideoPlay() {\n    setStreamerConfig(prevState => {\n      return { ...prevState,\n        paused: !prevState.paused\n      };\n    });\n  }\n\n  function toggleVideoLoop() {\n    setStreamerConfig(prevState => {\n      return { ...prevState,\n        loop: !prevState.loop\n      };\n    });\n  }\n\n  function handleFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target; // Update the form state.\n\n    setVideoFormConfig(prevState => ({ ...prevState,\n      [name]: value,\n      isloadDisabled: value ? false : true // Disable load button if no video URL is entered\n\n    }));\n  }\n\n  function handleFormSubmit(event) {\n    event.preventDefault(); // Update the streamer config.\n\n    setStreamerConfig(prevState => ({ ...prevState,\n      // Generate a random ID to be used as for the key prop to remount vimeo player\n      id: nanoid(),\n      video: videoFormConfig.videoUrl,\n      quality: streamerConfig.quality,\n      start: 0,\n      paused: true\n    }));\n  }\n\n  function handleVideoQualityChange(event) {\n    const quality = event.target.value; // Update the streamer config.\n\n    setStreamerConfig(prevState => ({ ...prevState,\n      id: nanoid(),\n      quality: quality\n    }));\n  }\n\n  function handleVideoTimeUpdate(event) {\n    // Keep track of the current time of the video.\n    setStreamerConfig(prevState => ({ ...prevState,\n      start: event.seconds\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(VideoForm, {\n      videoFormConfig: videoFormConfig,\n      handleFormChange: handleFormChange,\n      handleFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Vimeo\n    /* Remount the Vimeo player when the ID changes, \n     so to ensure new video quality gets applied */\n    , {\n      video: streamerConfig.video,\n      quality: streamerConfig.quality,\n      paused: streamerConfig.paused,\n      start: streamerConfig.start,\n      autoplay: !streamerConfig.paused,\n      loop: streamerConfig.loop,\n      muted: streamerConfig.muted,\n      onTimeUpdate: handleVideoTimeUpdate,\n      onEnd: () => setStreamerConfig(prevState => ({ ...prevState,\n        paused: true\n      })),\n      controls: true,\n      responsive: true\n    }, streamerConfig.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoControls, {\n      streamerConfig: streamerConfig,\n      toggleVideoPlay: toggleVideoPlay,\n      toggleVideoLoop: toggleVideoLoop,\n      handleVideoQualityChange: handleVideoQualityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VideoStreamer, \"sCk0jNcwuNkTzDl7iRQwadugpJA=\");\n\n_c = VideoStreamer;\nexport default VideoStreamer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoStreamer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Vimeo","VideoForm","VideoControls","nanoid","VideoStreamer","videoFormConfig","setVideoFormConfig","videoUrl","streamerConfig","setStreamerConfig","id","video","quality","start","loop","paused","muted","toggleVideoPlay","prevState","toggleVideoLoop","handleFormChange","event","name","value","target","isloadDisabled","handleFormSubmit","preventDefault","handleVideoQualityChange","handleVideoTimeUpdate","seconds"],"sources":["/Users/dingruoqian/Desktop/code/reactjs-conti-hmc/src/components/VideoStreamer.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Vimeo from \"@u-wave/react-vimeo\";\nimport VideoForm from \"./VideoForm\";\nimport VideoControls from \"./VideoControls\";\nimport { nanoid } from \"nanoid\";\n\nfunction VideoStreamer() {\n    const [videoFormConfig, setVideoFormConfig] = useState({\n        videoUrl: \"https://vimeo.com/712561471\", // Set default video URL to empty string\n    });\n\n    const [streamerConfig, setStreamerConfig] = useState({\n        id: nanoid(), // Set default video ID to empty string\n        video: \"https://vimeo.com/712561471\", // Set default video to 712561471\n        quality: \"1080\", // Set default quality to 1080p\n        start: 0, // Set default start time to 0\n        loop: true, // Set default loop to true\n        paused: true, // Set default state to paused\n        muted: true, // Set default state to muted\n    });\n\n    function toggleVideoPlay() {\n        setStreamerConfig(prevState => {\n            return {\n                ...prevState,\n                paused: !prevState.paused,\n            };\n        });\n    }\n\n    function toggleVideoLoop() {\n        setStreamerConfig(prevState => {\n            return {\n                ...prevState,\n                loop: !prevState.loop,\n            };\n        });\n    }\n\n    function handleFormChange(event) {\n        const { name, value } = event.target;\n\n        // Update the form state.\n        setVideoFormConfig(prevState => ({\n            ...prevState,\n            [name]: value,\n            isloadDisabled: value ? false : true, // Disable load button if no video URL is entered\n        }));\n    }\n\n    function handleFormSubmit(event) {\n        event.preventDefault();\n\n        // Update the streamer config.\n        setStreamerConfig(prevState => ({\n            ...prevState,\n            // Generate a random ID to be used as for the key prop to remount vimeo player\n            id: nanoid(),\n            video: videoFormConfig.videoUrl,\n            quality: streamerConfig.quality,\n            start: 0,\n            paused: true,\n        }));\n    }\n\n    function handleVideoQualityChange(event) {\n        const quality = event.target.value;\n\n        // Update the streamer config.\n        setStreamerConfig(prevState => ({\n            ...prevState,\n            id: nanoid(),\n            quality: quality,\n        }));\n    }\n\n    function handleVideoTimeUpdate(event) {\n        // Keep track of the current time of the video.\n        setStreamerConfig(prevState => ({\n            ...prevState,\n            start: event.seconds,\n        }));\n    }\n\n    return (\n        <div>\n            <VideoForm\n                videoFormConfig={videoFormConfig}\n                handleFormChange={handleFormChange}\n                handleFormSubmit={handleFormSubmit}\n            />\n            <Vimeo\n                /* Remount the Vimeo player when the ID changes, \n                 so to ensure new video quality gets applied */\n                key={streamerConfig.id}\n                video={streamerConfig.video}\n                quality={streamerConfig.quality}\n                paused={streamerConfig.paused}\n                start={streamerConfig.start}\n                autoplay={!streamerConfig.paused}\n                loop={streamerConfig.loop}\n                muted={streamerConfig.muted}\n                onTimeUpdate={handleVideoTimeUpdate}\n                onEnd={() =>\n                    setStreamerConfig(prevState => ({\n                        ...prevState,\n                        paused: true,\n                    }))\n                }\n                controls={true}\n                responsive={true}\n            />\n            <VideoControls\n                streamerConfig={streamerConfig}\n                toggleVideoPlay={toggleVideoPlay}\n                toggleVideoLoop={toggleVideoLoop}\n                handleVideoQualityChange={handleVideoQualityChange}\n            />\n        </div>\n    );\n}\n\nexport default VideoStreamer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}